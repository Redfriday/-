# turn-long-URLto-short-URL
1、	描述
长地址转换为短地址是指将一个比较长的URL地址转换为一个比较短的URL地址，当用户访问短地址时，系统再将其重定向为长地址进行访问。谷歌、百度等均推出了将长地址转换为短地址的免费接口。百度提供了一个web接口为http://dwz.cn/，当然百度也提供的API接口。
2、	功能
（1）	短地址广泛的应用在微博等链接的分享当中，微博等应用的分享都有一定的字数限制，如果链接过长则用户可以分享的内容被压缩，影响用户体验。
（2）	使用一个统一的系统管理所有的URL，方便管理，其次系统还能够对用户访问短地址的数据进行统计和分析从而得到用户的浏览习惯等重要信息。
3、	技术难点
（1）	长地址转换为短地址的算法。
（2）	如何保证一个短地址只对应一个长地址?
（3）	是否需要保证一个长地址只对应一个短地址？如果需要如何保证。
（4）	如何建立长短地址之间的映射关系。
（5）	短地址服务器如何实现高并发。
4、	解决方法
（1）	长地址转换为短地址的算法
①	一种方法是通过哈希，将长地址哈希成短地址，这种方法坏处是会有哈希冲突，解决哈希冲突会花费比较多的系统资源。
②	第二种方法是需要映射的时候随机生成一个短地址，如果这个短地址未被使用，则使用此短地址，如果此短地址已经被使用了，则再次随机一个短地址，
一直到随机到的短地址未被使用位置。随机的方法引入了太多的不确定性，尤其当已经利用的短地址比较多的时候，可能随机很多次多没有得到一个未经使用的短地址。
③	前两种方法在系统比较小的时候可以取得良好的效果，但是当系统比较大的时候，解决冲突的成本比较高。第三种方式是使用一个自增的短地址生成器，如果短地址是6为，可以使用数字0-9、字母a-z和A-Z，则短地址从000000-ZZZZZZ自增。这种方法的好处是没有短地址冲突，问题是很难保证一个长地址只对应一个短地址。如果用哈希保存长地址到短地址之间的映射关系，哈希表需要消耗比较大的内存，不过其实可以允许一个长地址对应多个短地址，只要保证一个短地址对应一个长地址即可。一种比较折中的方案是保存最近n个（例如1w个）长地址到短地址的映射关系，避免用户的攻击。
（2）	如何保证一个短地址只对应一个长地址
哈希表，不可避免，用户访问短地址的时候需要重定向成长地址。
（3）	如何建立长短地址之间的映射关系。
短地址->长地址通过哈希。
长地址->短地址（可以不保存所有长地址到短地址的映射关系，问题是如果想保存，该如何保存，存储充足也可以用哈希）
（4）	短地址服务器如何实现高并发。
首先短地址生成器不用按照000000-ZZZZZZ进行递增，只用按照数字进行递增，然后换算成0-9、a-z、A-Z的编码即可，那么按照数字递增的短地址生成器就可以分开了，例如0、3、6、9作为一个短地址生成器，1、4、7、10作为一个短地址生成器，2、5、8、11作为第三个，这个例子是按照模3的余数进行区分，如果有需要的话可以模更大的数，这样不同的短地址生成器就不会相互影响，从而实现高并发。

